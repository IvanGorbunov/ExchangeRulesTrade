ПереченьКонстант = Новый Структура;
ПереченьЗеркальныхКонстант = Новый Структура;

Если Параметры.ЗагруженыВалюты Тогда

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Валюты.Ссылка) КАК КоличествоВалют
		|ИЗ
		|	Справочник.Валюты КАК Валюты");
		
	КоличествоВалют = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоВалют = Выборка.КоличествоВалют;
	КонецЕсли;

	Если КоличествоВалют > 1 Тогда
		ПереченьКонстант.Вставить("ИспользоватьНесколькоВалют");
		ПереченьЗеркальныхКонстант.Вставить("НеИспользоватьНесколькоВалют");
	КонецЕсли;

КонецЕсли;

Если Параметры.ЗагруженыСклады Тогда

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склады.Ссылка) КАК КоличествоСкладов
		|ИЗ
		|	Справочник.Склады КАК Склады");
		
	КоличествоСкладов = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоСкладов = Выборка.КоличествоСкладов;
	КонецЕсли;

	Если КоличествоСкладов > 1 Тогда
		ПереченьКонстант.Вставить("ИспользоватьНесколькоСкладов");
		ПереченьЗеркальныхКонстант.Вставить("НеИспользоватьНесколькоСкладов");
	КонецЕсли;

КонецЕсли;

Если Параметры.ЗагруженыОрганизации Тогда

	Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Организации.Ссылка) КАК КоличествоОрганизаций
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)");
		
	КоличествоОрганизаций = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоОрганизаций = Выборка.КоличествоОрганизаций;
	КонецЕсли;

	Если КоличествоОрганизаций > 1 Тогда
		
		Если Метаданные.Имя <> "УправлениеТорговлейБазовая" Тогда
			ПереченьКонстант.Вставить("ИспользоватьНесколькоОрганизаций");
			ПереченьЗеркальныхКонстант.Вставить("НеИспользоватьНесколькоОрганизаций");
		КонецЕсли;
		ПереченьКонстант.Вставить("ИспользоватьНесколькоКасс");
		
		ПереченьКонстант.Вставить("ИспользоватьНесколькоРасчетныхСчетов");
		
		ПереченьКонстант.Вставить("ИспользоватьНесколькоРасчетныхСчетовКасс");
		
	КонецЕсли;

КонецЕсли;

Если Параметры.ЗагруженыКассы Тогда

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Кассы.Ссылка) КАК КоличествоКасс
		|ИЗ
		|	Справочник.Кассы КАК Кассы");
		
		КоличествоКасс = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоКасс = Выборка.КоличествоКасс;
	КонецЕсли;

	Если КоличествоКасс > 1 Тогда
		
		ПереченьКонстант.Вставить("ИспользоватьНесколькоКасс");
		ПереченьКонстант.Вставить("ИспользоватьНесколькоРасчетныхСчетовКасс");
		
	КонецЕсли;

КонецЕсли;

Если Параметры.ЗагруженыРасчетныеСчета Тогда

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетныеСчета.Ссылка) КАК КоличествоРасчетныхСчетов
		|ИЗ
		|	Справочник.БанковскиеСчетаОрганизаций КАК РасчетныеСчета");

	КоличествоРасчетныхСчетов = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоРасчетныхСчетов = Выборка.КоличествоРасчетныхСчетов;
	КонецЕсли;

	Если КоличествоРасчетныхСчетов > 1 Тогда
		
		ПереченьКонстант.Вставить("ИспользоватьНесколькоРасчетныхСчетов");
		ПереченьКонстант.Вставить("ИспользоватьНесколькоРасчетныхСчетовКасс");
		
	КонецЕсли;
	
КонецЕсли;

Если Параметры.ЗагруженыВидыЦен Тогда

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВидыЦен.Ссылка) КАК КоличествоВидовЦен
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен");

	КоличествоВидовЦен = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоВидовЦен = Выборка.КоличествоВидовЦен;
	КонецЕсли;

	Если КоличествоВидовЦен > 1 Тогда
		ПереченьКонстант.Вставить("ИспользоватьНесколькоВидовЦен");
	КонецЕсли;
	
КонецЕсли;

Если Параметры.ЗагруженыРолиКонтактныхЛиц Тогда
	ПереченьКонстант.Вставить("ИспользоватьРолиКонтактныхЛицПартнеров");
КонецЕсли;

Если Параметры.ЗагруженыГруппыДоступаПартнеров Тогда
	ПереченьКонстант.Вставить("ИспользоватьГруппыДоступаПартнеров");
КонецЕсли;

Если Параметры.ЗагруженыПОЗаказовКлиентов Тогда
	ПереченьКонстант.Вставить("ИспользоватьПричиныОтменыЗаказовКлиентов");
КонецЕсли;

Если Параметры.ЗагруженыБизнесРегионы Тогда
	ПереченьКонстант.Вставить("ИспользоватьБизнесРегионы");
КонецЕсли;	

Для Каждого Константа Из ПереченьКонстант Цикл
	
	КонстантаМенеджерЗначения = Константы[Константа.Ключ].СоздатьМенеджерЗначения();
	КонстантаМенеджерЗначения.Значение = Истина;
	ЗаписатьОбъектВИБ(КонстантаМенеджерЗначения, ТипЗнч(КонстантаМенеджерЗначения));
	
КонецЦикла;

Для Каждого Константа Из ПереченьЗеркальныхКонстант Цикл
	
	КонстантаМенеджерЗначения = Константы[Константа.Ключ].СоздатьМенеджерЗначения();
	КонстантаМенеджерЗначения.Значение = Ложь;
	ЗаписатьОбъектВИБ(КонстантаМенеджерЗначения, ТипЗнч(КонстантаМенеджерЗначения));
	
КонецЦикла;

Если ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций") Тогда
	
	КонстантаМенеджерЗначения = Константы.ВидКонтроляТоваровОрганизаций.СоздатьМенеджерЗначения();
	КонстантаМенеджерЗначения.Значение = Перечисления.ВидыКонтроляТоваровОрганизаций.КонецМесяцаИДатаПоследнегоДвижения;
	ЗаписатьОбъектВИБ(КонстантаМенеджерЗначения, ТипЗнч(КонстантаМенеджерЗначения));
	
КонецЕсли;
