// Виды номенклатуры
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	ИЛИ ВидыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)";
	
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
	Вид = Выборка.Ссылка.ПолучитьОбъект();
	Вид.ОбменДанными.Загрузка = Истина;
	Вид.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
	Вид.Записать();
КонецЦикла;

// Номенклатура
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	ИЛИ Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)";
	
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
	Номенклатура = Выборка.Ссылка.ПолучитьОбъект();
	Номенклатура.ОбменДанными.Загрузка = Истина;
	Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
	Номенклатура.Записать();
КонецЦикла;

// Склады
Если Параметры.ЗагруженыСклады Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.ИспользоватьОрдернуюСхемуПриОтгрузке ИЛИ Склады.ИспользоватьОрдернуюСхемуПриПоступлении";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Склад = Выборка.Ссылка.ПолучитьОбъект();
		Склад.ОбменДанными.Загрузка = Истина;
		Склад.ИспользоватьОрдернуюСхемуПриОтгрузке = Ложь;
		Склад.ИспользоватьОрдернуюСхемуПриПоступлении = Ложь;
		Склад.Записать();
	КонецЦикла;
КонецЕсли;

СтруктураКонстант = ОбщегоНазначенияУТПовтИсп.ЗначенияКонстантКонтролируемыхВБазовойВерсии();
Для Каждого КБВ Из СтруктураКонстант Цикл
	ТекЗначение = Константы[КБВ.Ключ].Получить();
	Если ТекЗначение <> КБВ.Значение Тогда
		Константы[КБВ.Ключ].Установить(КБВ.Значение);
	КонецЕсли;
КонецЦикла;
