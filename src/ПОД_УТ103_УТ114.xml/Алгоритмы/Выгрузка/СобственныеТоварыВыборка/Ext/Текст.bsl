ЗапросУчетнаяПолитка = Новый Запрос;
ЗапросУчетнаяПолитка.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаСрезПоследних.ВестиПартионныйУчетПоСкладам,
	|	УчетнаяПолитикаСрезПоследних.СпособОценкиМПЗ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитикаСрезПоследних";
	
Выборка = ЗапросУчетнаяПолитка.Выполнить().Выбрать();

Если Выборка.Следующий() Тогда
	ВедетсяПартионныйУчетПоСкладам = Выборка.ВестиПартионныйУчетПоСкладам;
	ОценкаМПЗПоСредней = (Выборка.СпособОценкиМПЗ = Перечисления.СпособыОценки.ПоСредней);
Иначе
	ВедетсяПартионныйУчетПоСкладам = Ложь;
	ОценкаМПЗПоСредней = Истина;
КонецЕсли;

Запрос = Новый Запрос;
Если ВедетсяПартионныйУчетПоСкладам И Не ОценкаМПЗПоСредней Тогда
	Запрос.Текст = Запросы.СобственныеТоварыНаСкладах.Текст;
ИначеЕсли ВедетсяПартионныйУчетПоСкладам И ОценкаМПЗПоСредней Тогда
	Запрос.Текст = Запросы.СобственныеТоварыНаСкладахПоСредней.Текст;
ИначеЕсли Не ВедетсяПартионныйУчетПоСкладам И Не ОценкаМПЗПоСредней Тогда
	Запрос.Текст = Запросы.СобственныеТоварыПартииБезСкладов.Текст;
Иначе // Не ВедетсяПартионныйУчетПоСкладам И ОценкаМПЗПоСредней Тогда
	Запрос.Текст = Запросы.СобственныеТоварыПартииБезСкладовПоСредней.Текст;
КонецЕсли;	

Если Параметры.Организации.Количество() > 0 Тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО (ИСТИНА)", 
								"ПО (ИСТИНА)
						        |ГДЕ
								|	ОстаткиПоПартиямСУчетнойПолитикой.Организация В (&МассивОрганизаций)");
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.Организации);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Остатки(&ДатаОстатков, )", "Остатки(&ДатаОстатков, Организация В (&МассивОрганизаций))");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТипыНоменклатуры.Товар)) КАК ОстаткиТоваров", "ТипыНоменклатуры.Товар) И ДокументОприходования.Организация В (&МассивОрганизаций) ) КАК ОстаткиТоваров");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТоварыНаСкладах КАК ТоварыНаСкладах", "ТоварыНаСкладах КАК ТоварыНаСкладах ГДЕ ТоварыНаСкладах.Регистратор.Организация В (&МассивОрганизаций) ");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТоварыВРознице КАК ТоварыВРознице", "ТоварыВРознице КАК ТоварыВРознице ГДЕ ТоварыВРознице.Регистратор.Организация В (&МассивОрганизаций) ");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТоварыВНТТ КАК ТоварыВНТТ", "ТоварыВНТТ КАК ТоварыВНТТ ГДЕ ТоварыВНТТ.Регистратор.Организация В (&МассивОрганизаций) ");
	
КонецЕсли;

Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Параметры.ДатаОстатков));
Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());

ВыборкаДанных = Новый ТаблицаЗначений;
ВыборкаДанных.Колонки.Добавить("Дата");
ВыборкаДанных.Колонки.Добавить("Организация");
ВыборкаДанных.Колонки.Добавить("Валюта");
ВыборкаДанных.Колонки.Добавить("Склад");
ВыборкаДанных.Колонки.Добавить("Партнер");
ВыборкаДанных.Колонки.Добавить("Контрагент");
ВыборкаДанных.Колонки.Добавить("Договор");
ВыборкаДанных.Колонки.Добавить("ПредъявленСчетФактура");
ВыборкаДанных.Колонки.Добавить("НомерСчетаФактуры");
ВыборкаДанных.Колонки.Добавить("ДатаСчетаФактуры");
ВыборкаДанных.Колонки.Добавить("Товары");
ВыборкаДанных.Колонки.Добавить("Серии");
ВыборкаДанных.Колонки.Добавить("Комментарий");

НоваяСтрока = Неопределено;

Если ВедетсяПартионныйУчетПоСкладам Тогда
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаПоОрганизациям = РезультатыЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		ВыборкаПоСкладам = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			ВыборкаПоСложномуУчету = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСложномуУчету.Следующий() Цикл
				
				ВыборкаПоДокументамПоступления = ВыборкаПоСложномуУчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоДокументамПоступления.Следующий() Цикл
					
					НоваяСтрока = ВыборкаДанных.Добавить();
					НоваяСтрока.Дата        = КонецДня(Параметры.ДатаОстатков); 
					НоваяСтрока.Организация = ВыборкаПоОрганизациям.Организация;
					НоваяСтрока.Склад       = ВыборкаПоСкладам.Склад;
					НоваяСтрока.Комментарий = НСтр("ru = 'УТ10.3 -> УТ11: Собственные товары на складах'");
					НоваяСтрока.Валюта = Константы.ВалютаУправленческогоУчета.Получить();
					
					ПредъявленСФ = Неопределено; 
					ДополнениеККоментарию = "";
					ПредъявленСФ = УчетНДС.НайтиПодчиненныйДокумент(ВыборкаПоДокументамПоступления.ДокументОприходования, "СчетФактураПолученный");
					
					НоваяСтрока.ПредъявленСчетФактура = Ложь;
					Если ЗначениеЗаполнено(ВыборкаПоДокументамПоступления.ДокументОприходования) Тогда
						ДополнениеККоментарию = НСтр("ru = '. Остатки по документу номер: %1 от: %2'");
						ДополнениеККоментарию = СтрЗаменить(ДополнениеККоментарию, "%2", ВыборкаПоДокументамПоступления.ДатаДокументаОприходования);
						ДополнениеККоментарию = СтрЗаменить(ДополнениеККоментарию, "%1", ВыборкаПоДокументамПоступления.НомерДокументаОприходования);
					КонецЕсли;
					
					Контрагент = ВыборкаПоДокументамПоступления.Партнер;
					Договор    = ВыборкаПоДокументамПоступления.Договор;
					
					Если ЗначениеЗаполнено(ПредъявленСФ) Тогда
						
						ДанныеСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПредъявленСФ,
							"Контрагент, ДоговорКонтрагента, НомерВходящегоДокумента, ДатаВходящегоДокумента");
						
						НоваяСтрока.ПредъявленСчетФактура = Истина;
						НоваяСтрока.НомерСчетаФактуры = ДанныеСФ.НомерВходящегоДокумента;
						НоваяСтрока.ДатаСчетаФактуры  = ДанныеСФ.ДатаВходящегоДокумента;
						
						Если Не ЗначениеЗаполнено(Контрагент) Тогда
							Контрагент = ДанныеСФ.Контрагент;
							Договор    = ДанныеСФ.ДоговорКонтрагента;
						КонецЕсли;
						
					КонецЕсли;
					
					НоваяСтрока.Партнер    = Контрагент;
					НоваяСтрока.Контрагент = Контрагент;
					НоваяСтрока.Договор    = Договор;
					
					НоваяСтрока.Комментарий = НоваяСтрока.Комментарий + ДополнениеККоментарию;

					НоваяСтрока.Товары = Новый ТаблицаЗначений;
					НоваяСтрока.Товары.Колонки.Добавить("Номенклатура");
					НоваяСтрока.Товары.Колонки.Добавить("Характеристика");
					НоваяСтрока.Товары.Колонки.Добавить("Качество");
					НоваяСтрока.Товары.Колонки.Добавить("Количество");
					НоваяСтрока.Товары.Колонки.Добавить("КоличествоУпаковок");
					НоваяСтрока.Товары.Колонки.Добавить("Цена");
					НоваяСтрока.Товары.Колонки.Добавить("Сумма");
					НоваяСтрока.Товары.Колонки.Добавить("СуммаРегл");
					НоваяСтрока.Товары.Колонки.Добавить("СтавкаНДС");
					НоваяСтрока.Товары.Колонки.Добавить("СуммаБезНДС");
					НоваяСтрока.Товары.Колонки.Добавить("СуммаНДС");
					НоваяСтрока.Товары.Колонки.Добавить("НДСРегл");
					НоваяСтрока.Товары.Колонки.Добавить("НомерГТД");
					НоваяСтрока.Товары.Колонки.Добавить("Серия");
					
					НоваяСтрока.Серии = Новый ТаблицаЗначений;
					НоваяСтрока.Серии.Колонки.Добавить("Номенклатура");
					НоваяСтрока.Серии.Колонки.Добавить("Характеристика");
					НоваяСтрока.Серии.Колонки.Добавить("Качество");
					НоваяСтрока.Серии.Колонки.Добавить("Серия");
					НоваяСтрока.Серии.Колонки.Добавить("Количество");
					НоваяСтрока.Серии.Колонки.Добавить("КоличествоУпаковок");
			
					ВыборкаДетальныеЗаписи = ВыборкаПоДокументамПоступления.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
						СтрокаСообщения = "";
						Если ВыборкаДетальныеЗаписи.Количество < 0 Тогда
							СтрокаСообщения = НСтр("ru = 'Обнаружен отрицательный остаток на складе ""%1"" по товару ""%2"" при выгрузке по правилу: ""%3""'");
						ИначеЕсли ВыборкаДетальныеЗаписи.Сумма <= 0 Или ВыборкаДетальныеЗаписи.Количество = 0 Тогда
							СтрокаСообщения = НСтр("ru = 'Обнаружен некорректный суммовой остаток на складе ""%1"" по товару ""%2"" при выгрузке по правилу: ""%3""'");
						ИначеЕсли ВыборкаДетальныеЗаписи.СуммаСНДСРегл <= ВыборкаДетальныеЗаписи.НДСРегл Или ВыборкаДетальныеЗаписи.НДСРегл < 0 Тогда
							СтрокаСообщения = НСтр("ru = 'Обнаружен некорректный суммовой остаток по данным регл. учета на складе ""%1"" по товару ""%2"" при выгрузке по правилу: ""%3""'");
						КонецЕсли;
						
						Если ЗначениеЗаполнено(СтрокаСообщения) Тогда
							СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1", ВыборкаПоСкладам.Склад);
							СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%2", ВыборкаДетальныеЗаписи.Номенклатура);
							СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%3", НСтр("ru = 'Собственные товары на складах'"));
							
							Если Не ЗначениеЗаполнено(ВыборкаПоСкладам.Склад) Тогда
								СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "на складе """" ", "");
							КонецЕсли;
							
							ЗаписатьВПротоколВыполнения(СтрокаСообщения,,Ложь);
							Продолжить;
						КонецЕсли;
				
						НоваяСтрокаТовары = НоваяСтрока.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаДетальныеЗаписи);
						НоваяСтрокаТовары.Цена = ВыборкаДетальныеЗаписи.Сумма / ВыборкаДетальныеЗаписи.Количество;
						НоваяСтрокаТовары.КоличествоУпаковок = ВыборкаДетальныеЗаписи.Количество;
				
						Если НоваяСтрокаТовары.НДСРегл = 0 Тогда
							СтавкаНДСЧислом = УчетНДС.ПолучитьСтавкуНДС(ВыборкаДетальныеЗаписи.СтавкаНДС) / 100;
							НоваяСтрокаТовары.СуммаНДС    = НоваяСтрокаТовары.Сумма / (СтавкаНДСЧислом + 1) * СтавкаНДСЧислом;
							НоваяСтрокаТовары.НДСРегл     = ВыборкаДетальныеЗаписи.СуммаСНДСРегл / (СтавкаНДСЧислом + 1) * СтавкаНДСЧислом;
							НоваяСтрокаТовары.СуммаБезНДС = НоваяСтрокаТовары.Сумма - НоваяСтрокаТовары.СуммаНДС;
						КонецЕсли;
				
						НоваяСтрокаТовары.СуммаРегл = ВыборкаДетальныеЗаписи.СуммаСНДСРегл - НоваяСтрокаТовары.НДСРегл;
				
						Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НомерГТД) Тогда
							НоваяСтрокаТовары.НомерГТД = Новый Структура;
							НоваяСтрокаТовары.НомерГТД.Вставить("Владелец", ВыборкаДетальныеЗаписи.Номенклатура);
							НоваяСтрокаТовары.НомерГТД.Вставить("СтранаПроисхождения", ВыборкаДетальныеЗаписи.СтранаПроисхождения);
							НоваяСтрокаТовары.НомерГТД.Вставить("ПометкаУдаления", ВыборкаДетальныеЗаписи.ПометкаУдаления);
							НоваяСтрокаТовары.НомерГТД.Вставить("Код", ВыборкаДетальныеЗаписи.НомерГТД);
						КонецЕсли;
				
						// Запоминаем серии номенклатуры, если для нее ведется учет серий
						Если ВыборкаДетальныеЗаписи.ВестиУчетПоСериям Тогда
							Если Параметры.РежимВыгрузкиСерий = 1 Тогда
								НоваяСтрокаСерии = НоваяСтрока.Серии.Добавить();
								НоваяСтрокаСерии.КоличествоУпаковок = ВыборкаДетальныеЗаписи.Количество;
								ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, ВыборкаДетальныеЗаписи);
							ИначеЕсли Параметры.РежимВыгрузкиСерий = 2 Тогда
								НоваяСтрокаТовары.Серия = ВыборкаДетальныеЗаписи.Серия;
							КонецЕсли;
						КонецЕсли;
						
					КонецЦикла;
			
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если НоваяСтрока <> Неопределено И НоваяСтрока.Товары.Количество() = 0 Тогда
		ВыборкаДанных.Удалить(НоваяСтрока);
	КонецЕсли;	
	
Иначе // если не ведется партионный учет по складам
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаПартииТоваров    = РезультатыЗапроса[РезультатыЗапроса.Количество()-2].Выгрузить();
	ТаблицаТоваровПоСкладам = РезультатыЗапроса[РезультатыЗапроса.Количество()-1].Выгрузить();
	
	Если Не Константы.ИспользоватьХарактеристикиНоменклатуры.Получить() Тогда
		ТаблицаТоваровПоСкладам.Свернуть("Организация, Склад, Номенклатура, Характеристика, Серия, Качество, ВестиУчетПоСериям, ВестиПартионныйУчетПоСериям", "Количество");
		ТаблицаПартииТоваров.Свернуть("Организация, Номенклатура, Характеристика, Качество, Серия, СтавкаНДС, НомерГТД, СтранаПроисхождения", 
										"Количество, Сумма, НДСРегл, СуммаНДС, СуммаСНДСРегл");
	КонецЕсли;
	
	ТекущийСклад          = Неопределено;
	ТекущаяОрганизация    = Неопределено;
	
	НоваяСтрока = Неопределено;
	
	Для Каждого Строка Из ТаблицаТоваровПоСкладам Цикл
		Если Строка.Организация <> ТекущаяОрганизация Или ТекущийСклад <> Строка.Склад Тогда
			
			НоваяСтрока = ВыборкаДанных.Добавить();
			ТекущаяОрганизация    = Строка.Организация;
			ТекущийСклад          = Строка.Склад;
						
			НоваяСтрока.Дата        = КонецДня(Параметры.ДатаОстатков); 
			НоваяСтрока.Организация = ТекущаяОрганизация;
			НоваяСтрока.Склад       = Строка.Склад;
			НоваяСтрока.Комментарий = НСтр("ru = 'УТ10.3 -> УТ11: Собственные товары на складах'");
			НоваяСтрока.Валюта      = Константы.ВалютаУправленческогоУчета.Получить();
			
			НоваяСтрока.Товары = Новый ТаблицаЗначений;
			НоваяСтрока.Товары.Колонки.Добавить("Номенклатура");
			НоваяСтрока.Товары.Колонки.Добавить("Характеристика");
			НоваяСтрока.Товары.Колонки.Добавить("Качество");
			НоваяСтрока.Товары.Колонки.Добавить("Количество");
			НоваяСтрока.Товары.Колонки.Добавить("КоличествоУпаковок");
			НоваяСтрока.Товары.Колонки.Добавить("Цена");
			НоваяСтрока.Товары.Колонки.Добавить("Сумма");
			НоваяСтрока.Товары.Колонки.Добавить("СуммаРегл");
			НоваяСтрока.Товары.Колонки.Добавить("СтавкаНДС");
			НоваяСтрока.Товары.Колонки.Добавить("СуммаБезНДС");
			НоваяСтрока.Товары.Колонки.Добавить("СуммаНДС");
			НоваяСтрока.Товары.Колонки.Добавить("НДСРегл");
			НоваяСтрока.Товары.Колонки.Добавить("НомерГТД");
			НоваяСтрока.Товары.Колонки.Добавить("Серия");
			НоваяСтрока.Товары.Колонки.Добавить("ВестиУчетПоСериям");
			НоваяСтрока.Товары.Колонки.Добавить("ВестиПартионныйУчетПоСериям");
			
			НоваяСтрока.Серии = Новый ТаблицаЗначений;
			НоваяСтрока.Серии.Колонки.Добавить("Номенклатура");
			НоваяСтрока.Серии.Колонки.Добавить("Характеристика");
			НоваяСтрока.Серии.Колонки.Добавить("Качество");
			НоваяСтрока.Серии.Колонки.Добавить("Серия");
			НоваяСтрока.Серии.Колонки.Добавить("Количество");
			НоваяСтрока.Серии.Колонки.Добавить("КоличествоУпаковок");
			
		КонецЕсли;
		
		СтрокаСообщения = "";
		Если Строка.Количество < 0 Тогда
			СтрокаСообщения = НСтр("ru = 'Обнаружен отрицательный остаток на складе ""%1"" по товару ""%2"" при выгрузке по правилу: ""%3""'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаСообщения) Тогда
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1", Строка.Склад);
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%2", Строка.Номенклатура);
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%3", НСтр("ru = 'Собственные товары на складах'"));
			Если Не ЗначениеЗаполнено(Строка.Склад) Тогда
				СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "на складе """" ", "");
			КонецЕсли;
			ЗаписатьВПротоколВыполнения(СтрокаСообщения,,Ложь);
			Продолжить;
		КонецЕсли;

		НоваяСтрокаТовары = НоваяСтрока.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, Строка);
		НоваяСтрокаТовары.КоличествоУпаковок = Строка.Количество;
		НоваяСтрокаТовары.Цена        = 0;
		НоваяСтрокаТовары.Сумма       = 0;
		НоваяСтрокаТовары.СуммаРегл   = 0;
		НоваяСтрокаТовары.СуммаБезНДС = 0;
		НоваяСтрокаТовары.СуммаНДС    = 0;
		НоваяСтрокаТовары.НДСРегл     = 0;
		
		// Запоминаем серии номенклатуры, если для нее ведется учет серий
		Если Строка.ВестиУчетПоСериям Тогда
			Если Параметры.РежимВыгрузкиСерий = 1 Тогда
				НоваяСтрокаСерии = НоваяСтрока.Серии.Добавить();
				НоваяСтрокаСерии.КоличествоУпаковок = Строка.Количество;
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, Строка);
			ИначеЕсли Параметры.РежимВыгрузкиСерий = 2 Тогда
				НоваяСтрокаТовары.Серия = Строка.Серия;
			КонецЕсли;
		КонецЕсли;
											
	КонецЦикла;
	
	// Выборка разбита по складам и организациям. И количественные данные также заполнены.
	Для Каждого Строка Из ВыборкаДанных Цикл
		Для Каждого СтрокаТоваров Из Строка.Товары Цикл
			
			Если СтрокаТоваров.ВестиПартионныйУчетПоСериям Тогда
				СтруктураПоиска = Новый Структура("Организация, Номенклатура, Характеристика, Серия, Качество", 
													Строка.Организация, СтрокаТоваров.Номенклатура, СтрокаТоваров.Характеристика, СтрокаТоваров.Серия, СтрокаТоваров.Качество);
													
			Иначе										
				СтруктураПоиска = Новый Структура("Организация, Номенклатура, Характеристика, Качество", 
													Строка.Организация, СтрокаТоваров.Номенклатура, СтрокаТоваров.Характеристика, СтрокаТоваров.Качество);
													
			КонецЕсли;
			
			НайденныеСтроки = ТаблицаПартииТоваров.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
					
				СтрокаПартий = НайденныеСтроки[0];
				
				Если СтрокаПартий.Количество = 0 Тогда
					Цена = СтрокаПартий.Сумма;
					ЦенаСНДСРегл = СтрокаПартий.СуммаСНДСРегл;
					ЦенаНДС = СтрокаПартий.СуммаНДС;
					ЦенаНДСРегл = СтрокаПартий.НДСРегл;
				Иначе
					Цена = СтрокаПартий.Сумма / СтрокаПартий.Количество;
					ЦенаСНДСРегл = СтрокаПартий.СуммаСНДСРегл / СтрокаПартий.Количество;
					ЦенаНДС = СтрокаПартий.СуммаНДС / СтрокаПартий.Количество;
					ЦенаНДСРегл = СтрокаПартий.НДСРегл / СтрокаПартий.Количество;
				КонецЕсли;
				
				Если ЦенаСНДСРегл <= ЦенаНДСРегл Тогда
					ЦенаСНДСРегл = Окр(ЦенаНДСРегл * 1.18 / 0.18, 2);
				КонецЕсли;
				Если Цена <= ЦенаНДС Тогда
					Цена = Окр(ЦенаНДС / 0.18, 2);
				КонецЕсли;
				
				СтрокаТоваров.Цена        = Окр(Цена, 2);
				СтрокаТоваров.Сумма       = Окр(Цена * СтрокаТоваров.Количество, 2);
				СтрокаТоваров.СуммаРегл   = Окр((ЦенаСНДСРегл - ЦенаНДСРегл) * СтрокаТоваров.Количество, 2);
				СтрокаТоваров.СтавкаНДС   = СтрокаПартий.СтавкаНДС;
				СтрокаТоваров.СуммаБезНДС = Окр((Цена - ЦенаНДС) * СтрокаТоваров.Количество, 2);
				СтрокаТоваров.СуммаНДС    = Окр(ЦенаНДС * СтрокаТоваров.Количество, 2);
				СтрокаТоваров.НДСРегл     = Окр(ЦенаНДСРегл * СтрокаТоваров.Количество, 2);
				
				Если ЗначениеЗаполнено(СтрокаТоваров.Серия) Тогда
					СтрокаТоваров.НомерГТД = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтрокаТоваров.Серия, "НомерГТД");
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаТоваров.СтавкаНДС) Тогда
					СтрокаТоваров.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				
			Иначе // это возвратная тара, она переносится в отдельном правиле, не здесь
				СтрокаТоваров.Количество = 0;
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЦикла;
	
КонецЕсли;

Индекс = ВыборкаДанных.Количество()-1;
Пока Индекс >= 0 Цикл
	Строка = ВыборкаДанных.Получить(Индекс);
	Если Строка.Товары.Количество() = 0 Тогда
		ВыборкаДанных.Удалить(Строка);
	Иначе
		ИндексТоваров = Строка.Товары.Количество()-1;
		Пока ИндексТоваров >= 0 Цикл
			СтрокаТоваров = Строка.Товары.Получить(ИндексТоваров);
			Если Окр(СтрокаТоваров.Сумма, 2) = 0 Или СтрокаТоваров.Количество = 0 Тогда
				Строка.Товары.Удалить(СтрокаТоваров);
			КонецЕсли;
			
			ИндексТоваров = ИндексТоваров - 1;
		КонецЦикла;
		Если Строка.Товары.Количество() = 0 Тогда
			ВыборкаДанных.Удалить(Строка);
		КонецЕсли;	
	КонецЕсли;
	
	Индекс = Индекс - 1;
КонецЦикла;
