Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.ДоговорКонтрагента.ВалютаВзаиморасчетов, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютаВзаиморасчетов,
	|	ПартииТоваровНаСкладахОстатки.Склад КАК Склад,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура.ВестиУчетПоСериям КАК ВестиУчетПоСериям,
	|	ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры КАК Серия,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.ПометкаУдаления КАК ПометкаУдаления,
	|	ПартииТоваровНаСкладахОстатки.Качество КАК Качество,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииТоваровНаСкладахОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент > 0
	|				ТОГДА ПартииТоваровНаСкладахОстатки.КоличествоОстаток * ПартииТоваровНаСкладахОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|			ИНАЧЕ ПартииТоваровНаСкладахОстатки.КоличествоОстаток
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&ДатаОстатков,
	|			СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартийТоваров.НаКомиссию)
	|				И Номенклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)) КАК ПартииТоваровНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахОстатки.Склад,
	|	ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.НомерГТД,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.СтранаПроисхождения,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры.ПометкаУдаления,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.ДоговорКонтрагента.ВалютаВзаиморасчетов, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)),
	|	ПартииТоваровНаСкладахОстатки.Качество,
	|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура.ВестиУчетПоСериям
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПартииТоваровНаСкладахОстатки.Склад.Наименование,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура.Наименование,
	|	ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры.Наименование
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Организация,
	|	Склад,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования.Контрагент,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования.ДоговорКонтрагента");
	
Если Параметры.Организации.Количество() > 0 Тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "КАК ПартииТоваровНаСкладахОстатки",
		"КАК ПартииТоваровНаСкладахОстатки
		| ГДЕ
		|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.ДокументОприходования.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&МассивОрганизаций) ");
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.Организации);	
КонецЕсли;
							
Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Параметры.ДатаОстатков));

ВыборкаДанных = Новый ТаблицаЗначений;
ВыборкаДанных.Колонки.Добавить("Дата");
ВыборкаДанных.Колонки.Добавить("Организация");
ВыборкаДанных.Колонки.Добавить("Склад");
ВыборкаДанных.Колонки.Добавить("Партнер");
ВыборкаДанных.Колонки.Добавить("Контрагент");
ВыборкаДанных.Колонки.Добавить("СоглашениеСКомитентом");
ВыборкаДанных.Колонки.Добавить("Договор");
ВыборкаДанных.Колонки.Добавить("Валюта");
ВыборкаДанных.Колонки.Добавить("Товары");
ВыборкаДанных.Колонки.Добавить("Серии");

РезультатыЗапроса = Запрос.Выполнить();
ВыборкаПоОрганизациям = РезультатыЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Пока ВыборкаПоОрганизациям.Следующий() Цикл
	
	ВыборкаПоСкладам = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСкладам.Следующий() Цикл
		
		ВыборкаПоКонтрагентам = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоКонтрагентам.Следующий() Цикл
			
			ВыборкаПоДоговорамКонтрагента = ВыборкаПоКонтрагентам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоДоговорамКонтрагента.Следующий() Цикл
				
				НоваяСтрока = ВыборкаДанных.Добавить();
				НоваяСтрока.Дата                  = КонецДня(Параметры.ДатаОстатков); 
				НоваяСтрока.Организация           = ВыборкаПоОрганизациям.Организация; 
				НоваяСтрока.Склад                 = ВыборкаПоСкладам.Склад; 
				НоваяСтрока.Партнер               = ВыборкаПоКонтрагентам.Контрагент; 
				НоваяСтрока.Контрагент            = ВыборкаПоКонтрагентам.Контрагент; 
				НоваяСтрока.СоглашениеСКомитентом = ВыборкаПоДоговорамКонтрагента.ДоговорКонтрагента; 
				НоваяСтрока.Договор               = ВыборкаПоДоговорамКонтрагента.ДоговорКонтрагента; 
				НоваяСтрока.Валюта                = ВыборкаПоДоговорамКонтрагента.ВалютаВзаиморасчетов; 
				
				НоваяСтрока.Товары = Новый ТаблицаЗначений;
				НоваяСтрока.Товары.Колонки.Добавить("Номенклатура");
				НоваяСтрока.Товары.Колонки.Добавить("Характеристика");
				НоваяСтрока.Товары.Колонки.Добавить("Качество");
				НоваяСтрока.Товары.Колонки.Добавить("Количество");
				НоваяСтрока.Товары.Колонки.Добавить("КоличествоУпаковок");
				НоваяСтрока.Товары.Колонки.Добавить("СтавкаНДС");
				НоваяСтрока.Товары.Колонки.Добавить("НомерГТД");
				НоваяСтрока.Товары.Колонки.Добавить("Серия");
				
				НоваяСтрока.Серии = Новый ТаблицаЗначений;
				НоваяСтрока.Серии.Колонки.Добавить("Номенклатура");
				НоваяСтрока.Серии.Колонки.Добавить("Характеристика");
				НоваяСтрока.Серии.Колонки.Добавить("Качество");
				НоваяСтрока.Серии.Колонки.Добавить("Серия");
				НоваяСтрока.Серии.Колонки.Добавить("Количество");
				НоваяСтрока.Серии.Колонки.Добавить("КоличествоУпаковок");
				
				ВыборкаДетальныеЗаписи = ВыборкаПоДоговорамКонтрагента.Выбрать(); 
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если ВыборкаДетальныеЗаписи.Количество < 0 Тогда
						СтрокаСообщения = НСтр("ru = 'Обнаружен отрицательный остаток на складе ""%1"" по товару ""%2"" при выгрузке по правилу: ""%3""'");
						СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1", ВыборкаПоСкладам.Склад);
						СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%2", ВыборкаДетальныеЗаписи.Номенклатура);
						СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%3", НСтр("ru = 'Ввод остатков товаров, принятых на комиссию'"));
						
						Если Не ЗначениеЗаполнено(ВыборкаПоСкладам.Склад) Тогда
							СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "на складе """" ", "");
						КонецЕсли;
						
						ЗаписатьВПротоколВыполнения(СтрокаСообщения,,Ложь);
						Продолжить;
					КонецЕсли;
					
					НоваяСтрокаТовары = НоваяСтрока.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаДетальныеЗаписи);
					Если ВыборкаДетальныеЗаписи.Количество <> 0 Тогда 
						НоваяСтрокаТовары.КоличествоУпаковок = ВыборкаДетальныеЗаписи.Количество;
					КонецЕсли;

					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НомерГТД) Тогда
						НоваяСтрокаТовары.НомерГТД = Новый Структура;
						НоваяСтрокаТовары.НомерГТД.Вставить("Владелец", ВыборкаДетальныеЗаписи.Номенклатура);
						НоваяСтрокаТовары.НомерГТД.Вставить("СтранаПроисхождения", ВыборкаДетальныеЗаписи.СтранаПроисхождения);
						НоваяСтрокаТовары.НомерГТД.Вставить("ПометкаУдаления", ВыборкаДетальныеЗаписи.ПометкаУдаления);
						НоваяСтрокаТовары.НомерГТД.Вставить("Код", ВыборкаДетальныеЗаписи.НомерГТД);
					КонецЕсли;
					
					// Запоминаем серии номенклатуры, если для нее ведется учет серий
					Если ВыборкаДетальныеЗаписи.ВестиУчетПоСериям Тогда
						Если Параметры.РежимВыгрузкиСерий = 1 Тогда
							НоваяСтрокаСерии = НоваяСтрока.Серии.Добавить();
							НоваяСтрокаСерии.КоличествоУпаковок = ВыборкаДетальныеЗаписи.Количество;
							ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, ВыборкаДетальныеЗаписи);
						ИначеЕсли Параметры.РежимВыгрузкиСерий = 2 Тогда
							НоваяСтрокаТовары.Серия = ВыборкаДетальныеЗаписи.Серия;
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				Если НоваяСтрока.Товары.Количество() = 0 Тогда
					ВыборкаДанных.Удалить(НоваяСтрока);
				Иначе
					Если Параметры.РежимВыгрузкиСерий = 1 Тогда
						НоваяСтрока.Серии.Свернуть("Номенклатура,Характеристика,Качество,Серия", "Количество,КоличествоУпаковок");
					Иначе
						НоваяСтрока.Серии.Очистить();
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
