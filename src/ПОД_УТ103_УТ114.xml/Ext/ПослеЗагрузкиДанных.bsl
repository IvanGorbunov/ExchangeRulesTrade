Выполнить(Алгоритмы.УстановитьИспользованиеОпциональныхВозможностей);

Если Параметры.ЗагруженыНовыеПользователи Тогда
	ПользователиСлужебный.ОбновитьСоставыГруппПользователей(Справочники.ГруппыПользователей.ВсеПользователи);
КонецЕсли;

// Обновление наборов свойств партнеров.
ОбщиеСвойстваПартнеров = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ПартнерыДополнительныеРеквизиты.Свойство КАК Свойство
|ИЗ
|	Справочник.Партнеры.ДополнительныеРеквизиты КАК ПартнерыДополнительныеРеквизиты
|ГДЕ
|	(НЕ ПартнерыДополнительныеРеквизиты.Свойство.ЭтоДополнительноеСведение)";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваПартнеров.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваПартнеров.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваПартнеров.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваПартнеров.Записать();

// Обновление наборов свойств физических лиц.
ОбщиеСвойстваФизическихЛиц = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ФизическиеЛица.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ФизическиеЛицаДополнительныеРеквизиты.Свойство КАК Свойство
|ИЗ
|	Справочник.ФизическиеЛица.ДополнительныеРеквизиты КАК ФизическиеЛицаДополнительныеРеквизиты
|ГДЕ
|	(НЕ ФизическиеЛицаДополнительныеРеквизиты.Свойство.ЭтоДополнительноеСведение)";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваФизическихЛиц.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваФизическихЛиц.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваФизическихЛиц.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваФизическихЛиц.Записать();

// Обновление наборов свойств соглашений с клиентами.
ОбщиеСвойстваСоглашенийСКлиентами = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_СоглашенияСКлиентами.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СоглашенияСКлиентамиДополнительныеРеквизиты.Свойство КАК Свойство
|ИЗ
|	Справочник.СоглашенияСКлиентами.ДополнительныеРеквизиты КАК СоглашенияСКлиентамиДополнительныеРеквизиты
|ГДЕ
|	(НЕ СоглашенияСКлиентамиДополнительныеРеквизиты.Свойство.ЭтоДополнительноеСведение)";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваСоглашенийСКлиентами.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваСоглашенийСКлиентами.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваСоглашенийСКлиентами.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваСоглашенийСКлиентами.Записать();

// Обновление наборов свойств соглашений с поставщиками.
ОбщиеСвойстваСоглашенийСПоставщиками = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_СоглашенияСПоставщиками.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СоглашенияСПоставщикамиДополнительныеРеквизиты.Свойство КАК Свойство
|ИЗ
|	Справочник.СоглашенияСПоставщиками.ДополнительныеРеквизиты КАК СоглашенияСПоставщикамиДополнительныеРеквизиты
|ГДЕ
|	(НЕ СоглашенияСПоставщикамиДополнительныеРеквизиты.Свойство.ЭтоДополнительноеСведение)";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваСоглашенийСПоставщиками.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваСоглашенийСПоставщиками.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваСоглашенийСПоставщиками.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваСоглашенийСПоставщиками.Записать();

// Обновление наборов свойств номенклатуры.
ОбщиеСвойстваНоменклатуры = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	НоменклатураДополнительныеРеквизиты.Свойство
|ИЗ
|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
|ГДЕ
|	(НЕ НоменклатураДополнительныеРеквизиты.Свойство В
|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
|					Т.Свойство
|				ИЗ
|					Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Т
|				ГДЕ
|					Т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))))
|";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваНоменклатуры.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваНоменклатуры.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваНоменклатуры.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваНоменклатуры.Записать();

// Обновление наборов свойств характеристик.
ОбщиеСвойстваХарактеристик = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие.ПолучитьОбъект();
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство
|ИЗ
|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
|ГДЕ
|	(НЕ ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство В
|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
|					Т.Свойство
|				ИЗ
|					Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Т
|				ГДЕ
|					Т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры))))
|";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	Если ОбщиеСвойстваХарактеристик.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство") = Неопределено Тогда
		НовоеСвойство = ОбщиеСвойстваХарактеристик.ДополнительныеРеквизиты.Добавить();
		НовоеСвойство.Свойство = Выборка.Свойство;
		Попытка
			Свво = Выборка.Свойство.ПолучитьОбъект();
			Свво.НаборСвойств = ОбщиеСвойстваХарактеристик.Ссылка;
			Свво.Виден = Истина;
			Свво.Доступен = Истина;
			Свво.Записать();
		Исключение
			
		КонецПопытки;
	КонецЕсли;
КонецЦикла;
ОбщиеСвойстваХарактеристик.Записать();

// Заполнение регистра сведений "Градации качества номенклатуры"
ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры = Параметры.ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры;
ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры.Свернуть("КачественнаяНоменклатура,НекачественнаяНоменклатура");
Для Каждого Строка Из ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры Цикл
	РегистрыСведений.ТоварыДругогоКачества.ЗаписатьСвязьСТоваромДругогоКачества(Строка.КачественнаяНоменклатура, Строка.НекачественнаяНоменклатура);
КонецЦикла;

// Обновление иерархии партнеров
Для Каждого Партнер Из Параметры.МассивЗагруженныхПартнеров Цикл
	Если Не Партнер.ЭтоНовый() Тогда
		ПартнерыИКонтрагенты.ЗаписатьИерархиюПартнера(Партнер.Ссылка);
	КонецЕсли;
КонецЦикла;

ЗагруженныеОбъектыПереноса = Параметры.ЗагруженныеОбъектыПереноса;
ЗагруженныеОбъектыПереноса.Сортировать("ИмяПКО");

Для Каждого СтрокаТаблицы Из ЗагруженныеОбъектыПереноса Цикл
	
	Если СтрокаТаблицы.Объект.ЭтоНовый() Тогда
		Продолжить;
	КонецЕсли;
	
	Объект = СтрокаТаблицы.Объект.Ссылка.ПолучитьОбъект();
	ПараметрыОбъекта = СтрокаТаблицы.Параметры;
	ИмяПКО = СтрокаТаблицы.ИмяПКО;
	
	ОбъектМодифицирован = Истина;
	
	Если Метаданные.Справочники.Содержит(Объект.МетаДанные()) Тогда
		Выполнить(Алгоритмы.ОбработкаСправочниковОтложенная);
	КонецЕсли;
	
	Если ОбъектМодифицирован Тогда
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Записать();
	КонецЕсли;
	
КонецЦикла;

Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
	Выполнить(Алгоритмы.УстановитьОграниченияБазовойВерсии);
КонецЕсли;

Выполнить(Алгоритмы.ОбработатьПослеЗаписиСкладыУчитывающиеСерии);
Выполнить(Алгоритмы.ОбработатьВидыНоменклатурыПослеЗаписи);
Выполнить(Алгоритмы.ЗаполнитьНастройкиКонтроляОстатковУСкладов);
Выполнить(Алгоритмы.ОбновитьСтатусыУказанияСерийВДокументах);
Выполнить(Алгоритмы.ВыполнитьПроведениеДокументов);
Выполнить(Алгоритмы.СформироватьСчетаФактурыПолученные);

Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Установить(Истина);

ПараметрыПослеЗагрузкиДанных = ОбменДаннымиУТ.ПараметрыПослеЗагрузкиДанных();
ОбменДаннымиУТ.ПослеЗагрузкиДанных(ПараметрыПослеЗагрузкиДанных);
