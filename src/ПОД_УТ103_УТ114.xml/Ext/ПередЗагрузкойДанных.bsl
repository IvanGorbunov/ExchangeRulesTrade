ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры = Новый ТаблицаЗначений;
ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры.Колонки.Добавить("КачественнаяНоменклатура");
ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры.Колонки.Добавить("НекачественнаяНоменклатура");

Параметры.Вставить("ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры", ТаблицаСоответствияКачественнойИНекачественнойНоменклатуры);
Параметры.Вставить("МассивЗагруженныхПартнеров", Новый Массив);
Параметры.Вставить("МассивЗагруженныхДокументовВводаОстатковТоваровНаСкладах", Новый Массив);
Параметры.Вставить("ЗагруженыНовыеПользователи", Ложь);
Параметры.Вставить("ДокументыВводаОстатковДляПересчетаСуммыРегл", Новый Массив);
Параметры.Вставить("ДокументыДляПроведения", Новый Массив);
Параметры.Вставить("ВводОстатковСчетаФактуры", Новый Массив);

Параметры.Вставить("ЗагруженыОрганизации",            Ложь);
Параметры.Вставить("ЗагруженыРасчетныеСчета",         Ложь);
Параметры.Вставить("ЗагруженыВалюты",                 Ложь);
Параметры.Вставить("ЗагруженыКассы",                  Ложь);
Параметры.Вставить("ЗагруженыВидыЦен",                Ложь);
Параметры.Вставить("ЗагруженыСклады",                 Ложь);
Параметры.Вставить("ЗагруженыРолиКонтактныхЛиц",      Ложь);
Параметры.Вставить("ЗагруженыГруппыДоступаПартнеров", Ложь);
Параметры.Вставить("ЗагруженыПОЗаказовКлиентов",      Ложь);

ЗагруженныеОбъектыПереноса = Новый ТаблицаЗначений;
ЗагруженныеОбъектыПереноса.Колонки.Добавить("ИмяПКО");
ЗагруженныеОбъектыПереноса.Колонки.Добавить("Объект");
ЗагруженныеОбъектыПереноса.Колонки.Добавить("Параметры");

Параметры.Вставить("ЗагруженныеОбъектыПереноса", ЗагруженныеОбъектыПереноса);

Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Установить(Ложь);

Параметры.Вставить("ЭтоБазоваяВерсия", Метаданные.Имя = "УправлениеТорговлейБазовая");
Параметры.Вставить("ЗагруженыБизнесРегионы", Ложь);

Дерево = Справочники.УпаковкиЕдиницыИзмерения.ПолучитьДанныеКлассификатора();
Соответствие = Новый Соответствие;
Для Каждого СтрокаУровень1 Из Дерево.Строки Цикл
	Для Каждого СтрокаУровень2 Из СтрокаУровень1.Строки Цикл
		Для Каждого СтрокаУровень3 Из СтрокаУровень2.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаУровень3.ТипИзмеряемойВеличины) Тогда
				СтруктураРеквизитов = Новый Структура("ТипИзмеряемойВеличины,Числитель,Знаменатель",
				Перечисления.ТипыИзмеряемыхВеличин[СтрокаУровень3.ТипИзмеряемойВеличины]);
				ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, СтрокаУровень3,,"ТипИзмеряемойВеличины");
				Соответствие.Вставить(СокрЛП(СтрокаУровень3.КодЧисловой), СтруктураРеквизитов);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
Параметры.Вставить("Соответствие", Соответствие);
